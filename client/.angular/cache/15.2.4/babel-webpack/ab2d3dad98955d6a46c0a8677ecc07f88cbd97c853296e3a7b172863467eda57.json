{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nlet LoginComponent = class LoginComponent {\n  // showConfetti = false;\n  constructor(formBuilder, route, router, authenticationService, alertService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.authenticationService = authenticationService;\n    this.alertService = alertService;\n    this.loading = false;\n    this.submitted = false;\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.loginForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.authenticationService.login(this.f.username.value, this.f.password.value).pipe(first()).subscribe(data => {\n      this.router.navigate([this.returnUrl]);\n      // this.showConfetti = true; // set the flag to true\n    }, error => {\n      this.alertService.error(error);\n      this.loading = false;\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  templateUrl: 'login.component.html'\n}, animations, [trigger('celebration', [state('inactive', style({\n  opacity: 0,\n  transform: 'translateY(-100%)'\n})), state('active', style({\n  opacity: 1,\n  transform: 'translateY(0)'\n})), transition('inactive => active', animate('0.5s ease-in')), transition('active => inactive', animate('0.5s ease-out'))])])], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}