{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { first } from 'rxjs/operators';\nlet HomeComponent = class HomeComponent {\n  constructor(authenticationService, userService, authService) {\n    this.authenticationService = authenticationService;\n    this.userService = userService;\n    this.authService = authService;\n    // showConfetti = false;\n    this.isLoggedIn = false;\n    this.currentUserSubscription = this.authenticationService.currentUser.subscribe(user => {\n      this.currentUser = user;\n    });\n  }\n  // ngOnInit() {\n  // \tthis.loadAllUsers();\n  // \t// subscribe to the authService isLoggedIn observable to update isLoggedIn variable\n  //   this.authService.isLoggedIn.subscribe((isLoggedIn) => {\n  //     this.isLoggedIn = isLoggedIn;\n  // }\n  ngOnInit() {\n    this.loadAllUsers();\n    // subscribe to the authService isLoggedIn observable to update isLoggedIn variable\n    this.authService.isLoggedIn.subscribe(isLoggedIn => {\n      this.isLoggedIn = isLoggedIn;\n    });\n  }\n  ngOnDestroy() {\n    // unsubscribe to ensure no memory leaks\n    this.currentUserSubscription.unsubscribe();\n  }\n  deleteUser(id) {\n    this.userService.delete(id).pipe(first()).subscribe(() => {\n      this.users = this.users.filter(user => user._id !== id);\n    });\n  }\n  loadAllUsers() {\n    this.userService.getAll().pipe(first()).subscribe(users => {\n      this.users = users;\n    });\n  }\n};\nHomeComponent = __decorate([Component({\n  templateUrl: 'home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\nexport { HomeComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}